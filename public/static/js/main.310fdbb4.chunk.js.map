{"version":3,"sources":["actions/TableActions.js","reducers/table.js","reducers/room.js","actions/ControlActions.js","reducers/control.js","actions/HeroActions.js","reducers/hero.js","reducers/index.js","store/configureStore.js","socket.js","components/Header.js","config.js","components/Card.js","components/Board.js","components/Pots.js","components/Button.js","components/Seat.js","containers/Seats.js","components/Table.js","components/ControlPanel.js","App.js","serviceWorker.js","index.js"],"names":["SET_BUTTON","SET_NEW_SEATS","SET_BOARD","SET_POTS","SET_TABLE_BET","SET_TABLE_RAISE","SET_BIG_BLIND","SET_HANDS","SET_SEAT","SET_ACTING_PLAYER","SET_WINNERS","initialState","seats","hands","pots","board","button","actingPlayer","tableBet","tableRaise","bigBlind","winners","playersCount","playersMax","SET_VISIBLE","SET_AVAILABLE_ACTIONS","visible","availableActions","SET_HAND","SET_NAME","SET_HERO_STACK","SET_HERO_BET","name","hand","stack","bet","rootReducer","combineReducers","table","state","arguments","length","undefined","action","type","Object","objectSpread","payload","newSeats","data","seatID","player","seat","inGame","hero","room","control","store","createStore","applyMiddleware","arg","next","console","log","SERVER","window","location","pathname","split","ROOM_ID","io","concat","query","roomID","Header","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","_this$props","props","numSeats","buyIn","startTime","react_default","a","createElement","className","Date","toLocaleString","src","width","alt","Component","Card","_this","call","drowCard","size","rank","suit","back","ctx","canvas","current","getContext","drawPokerBack","drawPokerCard","React","createRef","ref","height","Board","boardCards","map","card","index","Card_Card","Pots","renderedPots","pot","chips","Button","Seat","acting","winning","roundEnd","handCards","numSeatMax","positionClass","Button_Button","Seats","keys","renderedSeats","_loop","i","_seats$i","isHero","forEach","winner","Seat_Seat","Boolean","connect","Table","Pots_Pots","Board_Board","containers_Seats","ControlPanel","betValue","betChanged","onFold","e","socket","emit","word","onCheck","onCall","onBet","onRaise","heroBet","handleBetInputChange","currentTarget","setState","actionHandler","setVisible","target","classList","contains","content","_this$props2","_this$props$actions","actions","fold","check","raise","onChange","min","max","step","onClick","App","structure","runStack","heroName","_this2","updateData","_this2$props","setButton","setNewSeats","setBoard","setPots","setTableBet","setBigBlind","on","setHeroName","_data$options","options","_this2$props2","setHands","setWinners","setHand","_this2$props3","setAvailableActions","setHeroStack","setHeroBet","setActingPlayer","setTableRaise","seatNum","_this2$props4","_this2$props5","setSeat","_this2$props6","setupSocket","_this$state","Header_Header","Table_Table","components_ControlPanel","dispatch","setName","bb","setActindPlayer","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.310fdbb4.chunk.js","sourcesContent":["export const SET_BUTTON = 'SET_BUTTON';\r\nexport const SET_NEW_SEATS = 'SET_NEW_SEATS';\r\nexport const SET_BOARD = 'SET_BOARD';\r\nexport const SET_POTS = 'SET_POTS';\r\nexport const SET_TABLE_BET = 'SET_TABLE_BET';\r\nexport const SET_TABLE_RAISE = 'SET_TABLE_RAISE';\r\nexport const SET_BIG_BLIND = 'SET_BIG_BLIND';\r\nexport const SET_HANDS = 'SET_HANDS';\r\nexport const SET_SEAT = 'SET_SEAT';\r\nexport const SET_ACTING_PLAYER = 'SET_ACTING_PLAYER';\r\nexport const SET_WINNERS = 'SET_WINNERS';\r\n\r\nexport function setButton(seat) {\r\n    return {\r\n        type: SET_BUTTON,\r\n        payload: seat,\r\n    }\r\n}\r\n\r\nexport function setBigBlind(bb) {\r\n    return {\r\n        type: SET_BIG_BLIND,\r\n        payload: bb,\r\n    }\r\n}\r\n\r\nexport function setNewSeats(seats) {\r\n    return {\r\n        type: SET_NEW_SEATS,\r\n        payload: seats,\r\n    }\r\n}\r\n\r\nexport function setBoard(board) {\r\n    return {\r\n        type: SET_BOARD,\r\n        payload: board,\r\n    }\r\n}\r\n\r\nexport function setPots(pots) {\r\n    return {\r\n        type: SET_POTS,\r\n        payload: pots,\r\n    }\r\n}\r\n\r\nexport function setTableBet(bet) {\r\n    return {\r\n        type: SET_TABLE_BET,\r\n        payload: bet,\r\n    }\r\n}\r\n\r\nexport function setTableRaise(raise) {\r\n    return {\r\n        type: SET_TABLE_RAISE,\r\n        payload: raise,\r\n    }\r\n}\r\n\r\nexport function setHands(hands) {\r\n    return {\r\n        type: SET_HANDS,\r\n        payload: hands,\r\n    }\r\n}\r\n\r\nexport function setSeat(seat) {\r\n    return {\r\n        type: SET_SEAT,\r\n        payload: seat,\r\n    }\r\n}\r\n\r\nexport function setActindPlayer(seat) {\r\n    return {\r\n        type: SET_ACTING_PLAYER,\r\n        payload: seat,\r\n    }\r\n}\r\n\r\nexport function setWinners(winners) {\r\n    return {\r\n        type: SET_WINNERS,\r\n        payload: winners,\r\n    }\r\n}","import {\r\n    SET_BUTTON,\r\n    SET_NEW_SEATS,\r\n    SET_BOARD,\r\n    SET_POTS,\r\n    SET_TABLE_BET,\r\n    SET_BIG_BLIND,\r\n    SET_HANDS,\r\n    SET_SEAT,\r\n    SET_ACTING_PLAYER,\r\n    SET_WINNERS, SET_TABLE_RAISE,\r\n} from '../actions/TableActions';\r\n\r\nexport const initialState = {\r\n    seats: {},\r\n    hands: {},\r\n    pots: [],\r\n    board: [],\r\n    button: null,\r\n    actingPlayer: null,\r\n    tableBet: 0,\r\n    tableRaise: 0,\r\n    bigBlind: null,\r\n    winners: [],\r\n};\r\n\r\nexport function tableReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_BUTTON: {\r\n            return {...state, button: action.payload}\r\n        }\r\n\r\n        case SET_ACTING_PLAYER: {\r\n            return {...state, actingPlayer: action.payload}\r\n        }\r\n\r\n        case SET_NEW_SEATS: {\r\n            return {...state, seats: action.payload}\r\n        }\r\n\r\n        case SET_BOARD: {\r\n            return {...state, board: action.payload}\r\n        }\r\n\r\n        case SET_POTS: {\r\n            return {...state, pots: action.payload}\r\n        }\r\n\r\n        case SET_TABLE_BET: {\r\n            return {...state, tableBet: action.payload}\r\n        }\r\n\r\n        case SET_TABLE_RAISE: {\r\n            return {...state, tableRaise: action.payload}\r\n        }\r\n\r\n        case SET_BIG_BLIND: {\r\n            return {...state, bigBlind: action.payload}\r\n        }\r\n\r\n        case SET_HANDS: {\r\n            return {...state, hands: action.payload}\r\n        }\r\n\r\n        case SET_WINNERS: {\r\n            return {...state, winners: action.payload}\r\n        }\r\n\r\n        case SET_SEAT: {\r\n            const newSeats = {...state.seats};\r\n            const data = action.payload;\r\n            const seatID = data.player.seat;\r\n            newSeats[seatID] = {\r\n                ...newSeats[seatID],\r\n                stack: data.stack,\r\n                bet: data.bet,\r\n                inGame: data.inGame\r\n            };\r\n\r\n            return {...state, seats: newSeats}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const initialState = {\r\n\r\n    playersCount: null,\r\n    playersMax: null,\r\n\r\n};\r\n\r\nexport function roomReducer(state = initialState) {\r\n    return state\r\n}","export const SET_VISIBLE = 'SET_VISIBLE';\r\nexport const SET_AVAILABLE_ACTIONS = 'SET_AVAILABLE_ACTIONS';\r\n\r\nexport function setVisible(visible) {\r\n    return {\r\n        type: SET_VISIBLE,\r\n        payload: visible,\r\n    }\r\n}\r\n\r\nexport function setAvailableActions(actions) {\r\n    return {\r\n        type: SET_AVAILABLE_ACTIONS,\r\n        payload: actions,\r\n    }\r\n}","import { SET_VISIBLE, SET_AVAILABLE_ACTIONS } from '../actions/ControlActions';\r\n\r\nexport const initialState = {\r\n    visible: false,\r\n    availableActions: {},\r\n};\r\n\r\nexport function controlReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_VISIBLE: {\r\n            return {...state, visible: action.payload}\r\n        }\r\n\r\n        case SET_AVAILABLE_ACTIONS: {\r\n            return {...state, availableActions: action.payload}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const SET_HAND = 'SET_HAND';\r\nexport const SET_NAME = 'SET_NAME';\r\nexport const SET_HERO_STACK = 'SET_HERO_STACK';\r\nexport const SET_HERO_BET = 'SET_HERO_BET';\r\n\r\nexport function setHand(hand) {\r\n    return {\r\n        type: SET_HAND,\r\n        payload: hand,\r\n    }\r\n}\r\n\r\nexport function setName(name) {\r\n    return {\r\n        type: SET_NAME,\r\n        payload: name,\r\n    }\r\n}\r\n\r\nexport function setHeroStack(stack) {\r\n    return {\r\n        type: SET_HERO_STACK,\r\n        payload: stack,\r\n    }\r\n}\r\n\r\nexport function setHeroBet(bet) {\r\n    return {\r\n        type: SET_HERO_BET,\r\n        payload: bet,\r\n    }\r\n}","import {SET_HAND, SET_NAME, SET_HERO_STACK, SET_HERO_BET} from '../actions/HeroActions';\r\n\r\nexport const initialState = {\r\n    name: '',\r\n    hand: null,\r\n    stack: 0,\r\n    bet: 0,\r\n};\r\n\r\nexport function heroReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_HAND: {\r\n            return {...state, hand: action.payload}\r\n        }\r\n\r\n        case SET_NAME: {\r\n            return {...state, name: action.payload}\r\n        }\r\n\r\n        case SET_HERO_STACK: {\r\n            return {...state, stack: action.payload}\r\n        }\r\n\r\n        case SET_HERO_BET: {\r\n            return {...state, bet: action.payload}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { tableReducer } from './table';\r\nimport { roomReducer } from './room';\r\nimport { controlReducer } from './control';\r\nimport { heroReducer } from './hero';\r\n\r\nexport const rootReducer = combineReducers({\r\n    table: tableReducer,\r\n    hero: heroReducer,\r\n    room: roomReducer,\r\n    control: controlReducer,\r\n});","import { createStore, applyMiddleware } from 'redux'\r\nimport { rootReducer } from '../reducers'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware((arg) => {\r\n    return next => action => {\r\n        console.log('action', action, arg);\r\n        next(action)\r\n    }\r\n}));","import io from 'socket.io-client';\r\nimport { SERVER_URL } from './config';\r\n\r\nconst SERVER = /*SERVER_URL || */window.location.pathname.split(`/`)[0];\r\n\r\nconst ROOM_ID = window.location.pathname.split(`/`)[2];\r\n\r\nexport default io(`${SERVER}/game`, {query: {roomID: ROOM_ID}});","import React, { Component } from 'react'\r\nimport { SERVER_URL } from '../config';\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        const { roomID, numSeats, buyIn, startTime } = this.props;\r\n        return (\r\n            <header className=\"App-header\">\r\n                <div className=\"header-info\">\r\n                    <p className=\"title-room\">\r\n                        Турнир: {roomID}<br/>\r\n                        Начало: {new Date(startTime).toLocaleString()}<br/>\r\n                        Мест: {numSeats}<br/>\r\n                        Вход: ${buyIn}\r\n                    </p>\r\n                </div>\r\n                <div className=\"logo_container\">\r\n                    <img src={`${SERVER_URL}/img/logo.png`} className=\"logo\" width=\"150\" alt=\"logo\"/>\r\n                    <h1 className=\"App-title\">Flame Poker</h1>\r\n                </div>\r\n                <div className=\"header-info\">\r\n                    <p>Blinds:20/40</p>\r\n                    <p>Ante:0</p>\r\n                    <p>\r\n                        Next level:\r\n                        30/60 10 min\r\n                    </p>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}","export const SERVER_URL = '';","import React, { Component } from 'react';\r\n\r\nexport class Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvas = React.createRef();\r\n    }\r\n\r\n    drowCard = () => {\r\n        const {size, rank, suit, back} = this.props;\r\n\r\n        const ctx = this.canvas.current.getContext('2d');\r\n        if (back){\r\n            ctx.drawPokerBack(0, 0, size, '#0E5989','#041D2D');\r\n        } else {\r\n            ctx.drawPokerCard(0, 0, size, suit, rank);\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.drowCard();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drowCard();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {size} = this.props;\r\n        return (\r\n            <canvas ref={this.canvas} width={size*0.75} height={size} />\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Card } from './Card';\r\n\r\nexport class Board extends Component {\r\n    render() {\r\n        const { board } = this.props;\r\n\r\n        const boardCards = board.map((card, index) => {\r\n            return (\r\n                <Card key={index}\r\n                      size={100}\r\n                      suit={card[1]}\r\n                      rank={card[0] === `T` ? `10` : card[0]}\r\n                />\r\n            )\r\n        });\r\n\r\n        return (\r\n\r\n            <div className=\"table-board\">\r\n                {boardCards}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class Pots extends Component {\r\n    render() {\r\n        const { pots } = this.props;\r\n\r\n        const renderedPots = pots.map((pot, index) => {\r\n            if (pot.chips) {\r\n                return (\r\n                    <div\r\n                        key={index}\r\n                        className=\"pot\"\r\n                    >\r\n                        <p>{`Банк ${index+1}:`}</p>\r\n                        <span>{pot.chips}</span>\r\n                    </div>\r\n                )\r\n            } else return null;\r\n        });\r\n\r\n        return (\r\n            <div className=\"table-pots\">\r\n\r\n                {renderedPots}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class Button extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`button`} >D</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Card } from './Card';\r\nimport { Button } from './Button';\r\nimport { SERVER_URL } from '../config';\r\n\r\nexport class Seat extends Component {\r\n    render() {\r\n        const { seatID, name, stack, bet, hand, inGame, numSeats, button, acting, winning, roundEnd } = this.props;\r\n\r\n        let handCards = null;\r\n        if (inGame) {\r\n            if (hand) {\r\n                handCards = hand.map((card, index) => {\r\n                    return (\r\n                        <Card key={index}\r\n                              size={50}\r\n                              suit={card[1]}\r\n                              rank={card[0] === `T` ? `10` : card[0]}\r\n                        />\r\n                    )\r\n                });\r\n            } else {\r\n                handCards = [\r\n                    <Card\r\n                        key=\"1\"\r\n                        size={50}\r\n                        back={true}\r\n                    />,\r\n                    <Card\r\n                        key=\"2\"\r\n                        size={50}\r\n                        back={true}\r\n                    />\r\n                ]\r\n            }\r\n        }\r\n\r\n        let numSeatMax = 9;\r\n        if (numSeats <= 2) numSeatMax = 2;\r\n        else if (numSeats === 3) numSeatMax = 3;\r\n        else if (numSeats === 4) numSeatMax = 4;\r\n        else if (numSeats === 5) numSeatMax = 5;\r\n        else if (numSeats === 6) numSeatMax = 6;\r\n\r\n        const positionClass = `seat-${seatID+1}-${numSeatMax} ${seatID+1  > numSeatMax/2 ? 'seat-left' : 'seat-right'}`;\r\n\r\n        return (\r\n            <div className={`seat ${positionClass} ${acting ? 'acting' : ''} ${winning ? 'seat-winner' : ''}`}>\r\n                <img src={`${SERVER_URL}/img/default-avatar.png`} alt=\"avatar\" className=\"seat-avatar\"/>\r\n                <p className=\"seat-user_name\">{name}</p>\r\n                <p className=\"seat-stack\">${stack}</p>\r\n                <div className=\"seat-hand\" >\r\n                    {handCards}\r\n                </div>\r\n                <div className=\"seat-table_info\">\r\n                    {button && <Button/>}\r\n                    {bet && !roundEnd ? <p className=\"seat-bet\">${bet}</p> : null}\r\n                    {winning ? <p className=\"seat-bet\">${winning}</p> : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Seat } from '../components/Seat';\r\n\r\nclass Seats extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { seats, hero, hands, button, actingPlayer, winners } = this.props;\r\n\r\n        const numSeats = Object.keys(seats).length;\r\n        const renderedSeats = [];\r\n        for (const i in seats) {\r\n            const { name, stack, bet, inGame } = seats[i];\r\n            let isHero = false;\r\n            let hand = hands[i];\r\n            if (name === hero.name) {\r\n                isHero = true;\r\n                hand = hero.hand || null;\r\n            }\r\n\r\n            let winning = 0;\r\n            winners.forEach((pot)=>{\r\n                pot.winners.forEach((winner)=>{\r\n                    if (winner.seat === i) {\r\n                        winning += winner.chips;\r\n                    }\r\n                })\r\n            })\r\n\r\n            renderedSeats[i] = <Seat\r\n                key={i}\r\n                seatID={+i}\r\n                name={name}\r\n                stack={stack}\r\n                inGame={inGame}\r\n                bet={bet}\r\n                hero={isHero}\r\n                hand={hand}\r\n                numSeats={numSeats}\r\n                button={button == i}\r\n                acting={actingPlayer == i}\r\n                winning={winning}\r\n                roundEnd={Boolean(winners.length)}\r\n            />\r\n        }\r\n\r\n        return (\r\n            <div className=\"seats\">\r\n                {renderedSeats}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        seats: store.table.seats,\r\n        hands: store.table.hands,\r\n        hero: store.hero,\r\n        button: store.table.button,\r\n        actingPlayer: store.table.actingPlayer,\r\n        winners: store.table.winners,\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Seats);","import React, { Component } from 'react';\r\nimport { Board } from './Board';\r\nimport { Pots } from './Pots';\r\nimport Seats from '../containers/Seats';\r\n\r\nexport default class Table extends Component {\r\n\r\n\r\n    render() {\r\n        const { table } = this.props;\r\n\r\n        return (\r\n            <div className=\"table\">\r\n                <Pots pots={table.pots}/>\r\n                <Board board={table.board}/>\r\n                <Seats/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport socket from '../socket';\r\n\r\nclass ControlPanel extends Component {\r\n    state = {\r\n        betValue: 0,\r\n        betChanged: false,\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { bigBlind, tableBet, actions, visible, tableRaise} = props;\r\n\r\n        if (!visible && state.betChanged) return { betChanged: false };\r\n\r\n        if (visible && !state.betChanged) {\r\n            return { betValue: actions.bet ? bigBlind : tableBet + tableRaise };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onFold = (e) => {\r\n        socket.emit(`action`, { word: `fold` });\r\n    };\r\n\r\n    onCheck = (e) => {\r\n        socket.emit(`action`, { word: `check` });\r\n    };\r\n\r\n    onCall = (e) => {\r\n        socket.emit(`action`, { word: `call` });\r\n    };\r\n\r\n    onBet = (e) => {\r\n        const { betValue } = this.state;\r\n        socket.emit(`action`, { word: `bet`, bet: betValue });\r\n    };\r\n\r\n    onRaise = (e) => {\r\n        const { betValue } = this.state;\r\n        const { heroBet } = this.props;\r\n        socket.emit(`action`, { word: `raise`, bet: betValue - heroBet });\r\n    };\r\n\r\n    handleBetInputChange = (e) => {\r\n        const { bigBlind, tableBet, heroBet, stack } = this.props;\r\n        let value = e.currentTarget.value;\r\n        // value = value < tableBet + bigBlind ? tableBet + bigBlind : value;\r\n        this.setState({ betValue: value, betChanged: true })\r\n    };\r\n\r\n    actionHandler = (e) => {\r\n        const { setVisible } = this.props;\r\n        if (e.target.classList.contains('action_button')) {\r\n            setVisible(false);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { betValue } = this.state;\r\n        const { visible, bigBlind, tableBet, heroBet, stack, tableRaise } = this.props;\r\n        const {fold, check, call, bet, raise} = this.props.actions;\r\n\r\n        let value;\r\n        if (bet) {\r\n            value = betValue < bigBlind ? bigBlind :\r\n                betValue > stack ? stack : betValue;\r\n        }\r\n        if (raise) {\r\n            value = betValue < tableBet + tableRaise ? tableBet + tableRaise :\r\n                betValue > stack ? stack : betValue;\r\n        }\r\n\r\n\r\n        let content;\r\n        if (visible) {\r\n            content = <div>\r\n                {(bet || raise) &&\r\n                <div>\r\n                    <input\r\n                        type=\"number\"\r\n                        onChange={this.handleBetInputChange}\r\n                        value={betValue}\r\n                    />\r\n                    <input\r\n                        type=\"range\"\r\n                        className=\"bet_range\"\r\n                        min={bet ? bigBlind : tableBet + tableRaise}\r\n                        max={raise ? stack + heroBet : stack}\r\n                        step={1}\r\n                        value={betValue}\r\n                        onChange={this.handleBetInputChange}\r\n                    />\r\n                </div>}\r\n                <div onClick={this.actionHandler}>\r\n                    {fold && <button className=\"action_button\" onClick={this.onFold}>FOLD</button>}\r\n                    {check && <button className=\"action_button\" onClick={this.onCheck}>CHECK</button>}\r\n                    {call && <button className=\"action_button\" onClick={this.onCall}>\r\n                        {`CALL ${tableBet - heroBet > stack ? stack : tableBet - heroBet}`}\r\n                    </button>}\r\n                    {bet && <button className=\"action_button\" onClick={this.onBet}>\r\n                        {`BET ${value}`}\r\n                        </button>}\r\n                    {raise && <button className=\"action_button\" onClick={this.onRaise}>{`RAISE TO ${value}`}</button>}\r\n                </div>\r\n            </div>\r\n        } else {\r\n            content = <div>\r\n\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className={`control_panel ${!visible ? 'hidden' : ''}`}>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        heroBet: store.hero.bet,\r\n        stack: store.hero.stack,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ControlPanel);\r\n\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport socket from './socket';\nimport { Header } from './components/Header';\nimport Table from './components/Table';\nimport ControlPanel from './components/ControlPanel';\nimport {\n    setButton,\n    setNewSeats,\n    setBoard,\n    setPots,\n    setTableBet,\n    setTableRaise,\n    setBigBlind,\n    setHands,\n    setSeat,\n    setActindPlayer,\n    setWinners,\n} from './actions/TableActions';\nimport { setHand, setName, setHeroBet, setHeroStack } from './actions/HeroActions';\nimport { setVisible, setAvailableActions } from './actions/ControlActions';\n\nclass App extends Component {\n    state = {\n        roomID: window.location.pathname.split(`/`)[2],\n        structure: null,\n        buyIn: null,\n        numSeats: null,\n        startTime: null,\n        runStack: null,\n        heroName: null,\n    };\n\n    setupSocket() {\n        const updateData = (data) => {\n            const {\n                setButton,\n                setNewSeats,\n                setBoard,\n                setPots,\n                setTableBet,\n                setBigBlind,\n            } = this.props;\n\n            setButton(data.button);\n            setNewSeats(data.seats);\n            setBoard(data.board);\n            setPots(data.pots);\n            setTableBet(data.bet);\n            setBigBlind(data.bigBlind);\n        };\n\n        socket.on('connect', () => {\n            socket.emit('get-info', {type: 'room-info'}, (data) => {\n                if (!data) return;\n                const { setHeroName } = this.props;\n                const { buyIn, numSeats, runStack, structure, startTime } = data.options;\n                this.setState({\n                    buyIn: buyIn,\n                    numSeats: numSeats,\n                    runStack: runStack,\n                    structure: structure,\n                    startTime: startTime,\n                    heroName: data.hero.name,\n                });\n                setHeroName(data.hero.name);\n            });\n        });\n\n        socket.on('tournament-start', (data) => {\n            updateData(data);\n        });\n\n        socket.on('new-round', (data) => {\n            console.log('new-round');\n\n            const { setHands, setWinners } = this.props;\n            setHands({});\n            setWinners([]);\n            updateData(data);\n        });\n\n        socket.on('new-street', (data) => {\n            updateData(data);\n        });\n\n        socket.on('deal-cards', (data) => {\n            console.log('deal-cards');\n            const { setHand } = this.props;\n            setHand(data.hand);\n        });\n\n        socket.on('expected-action', (data) => {\n            const {\n                setVisible,\n                setTableBet,\n                setAvailableActions,\n                setHeroStack,\n                setHeroBet,\n                setActingPlayer,\n                setTableRaise,\n            } = this.props;\n\n            const { actions, tableBet, stack, bet, seatNum, tableRaise } = data;\n            setVisible(true);\n            setAvailableActions(actions);\n            setHeroStack(stack);\n            setHeroBet(bet);\n            setTableBet(tableBet);\n            setTableRaise(tableRaise);\n            setActingPlayer(seatNum);\n            console.log('expected-action', data);\n        });\n\n        socket.on('round-end', (data) => {\n            const { setHands, setWinners } = this.props;\n            setHands(data.hands);\n            setWinners(data.winners);\n            console.log('round-end', data);\n        });\n\n        socket.on('all-in', (data) => {\n            const { setHands } = this.props;\n            setHands(data);\n            console.log('all-in', data);\n        });\n\n        socket.on(`waiting-player-move`, (data) => {\n            const { setActingPlayer } = this.props;\n            setActingPlayer(data.seat);\n            console.log(`waiting-player-move`, data);\n        });\n\n        socket.on(`action-completed`, (data) => {\n            const { setHeroStack, setHeroBet, setVisible, setSeat, setActingPlayer } = this.props;\n            setVisible(false);\n            setHeroStack(data.stack);\n            setHeroBet(data.bet);\n            setSeat(data);\n            setActingPlayer(null);\n\n            console.log(`action-completed`, data);\n        });\n\n        socket.on(`player-acted`, (data) => {\n            const { setSeat, setActingPlayer } = this.props;\n            setSeat(data);\n            setActingPlayer(null);\n            console.log(`player-acted`, data);\n        });\n\n        socket.on('err', (data) => {\n            console.log(data);\n        });\n    }\n\n\n\n    componentDidMount() {\n        this.setupSocket();\n    }\n\n    render() {\n        const { room, table, control } = this.props;\n        const { setVisible } = this.props;\n        const { roomID, numSeats, buyIn, startTime } = this.state;\n        return (\n            <div className=\"App\">\n                <Header\n                    room={room}\n                    roomID={roomID}\n                    numSeats={numSeats}\n                    buyIn={buyIn}\n                    startTime={startTime}\n                />\n\n                <main className=\"App-main\">\n                    <Table table={table} />\n                    <ControlPanel\n                        tableBet={table.tableBet}\n                        tableRaise={table.tableRaise}\n                        bigBlind={table.bigBlind}\n                        visible={control.visible}\n                        actions={control.availableActions}\n                        setVisible={setVisible}\n                    />\n                </main>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        room: store.room,\n        table: store.table,\n        control: store.control,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setButton: (seat) => dispatch(setButton(seat)),\n        setNewSeats: (seats) =>dispatch(setNewSeats(seats)),\n        setBoard: (board) => dispatch(setBoard(board)),\n        setPots: (pots) => dispatch(setPots(pots)),\n        setTableBet: (bet) => dispatch(setTableBet(bet)),\n        setTableRaise: (raise) => dispatch(setTableRaise(raise)),\n        setHand: (hand) => dispatch(setHand(hand)),\n        setHeroName: (name) => dispatch(setName(name)),\n        setVisible: (visible) => dispatch(setVisible(visible)),\n        setAvailableActions: (actions) => dispatch(setAvailableActions(actions)),\n        setBigBlind: (bb) => dispatch(setBigBlind(bb)),\n        setHeroStack: (stack) => dispatch(setHeroStack(stack)),\n        setHeroBet: (bet) => dispatch(setHeroBet(bet)),\n        setHands: (hands) => dispatch(setHands(hands)),\n        setSeat: (seat) => dispatch(setSeat(seat)),\n        setActingPlayer: (seat) => dispatch(setActindPlayer(seat)),\n        setWinners: (winners) => dispatch(setWinners(winners)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from './store/configureStore';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}